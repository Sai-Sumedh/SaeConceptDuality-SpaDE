/n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/../../functions/get_data.py:68: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  file = torch.load(datapath)
wandb: Currently logged in as: sumedh_hindupur (harvard01). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.19.6 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.3
wandb: Run data is saved locally in /n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/wandb/run-20250217_144850-buqa3ch4
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run elfin912_jumprelu_gamreg0.0005_021725
wandb: ⭐️ View project at https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: 🚀 View run at https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/buqa3ch4
wandb: - 0.008 MB of 0.020 MB uploadedwandb: \ 0.008 MB of 0.020 MB uploadedwandb: | 0.023 MB of 0.023 MB uploadedwandb:                                                                                
wandb: 
wandb: Run history:
wandb: c0_loss_train_mse █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c1_loss_train_mse █▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c2_loss_train_mse █▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c3_loss_train_mse █▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c4_loss_train_mse █▄▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c5_loss_train_mse █▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            lambda ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:        loss_train █▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_mse █▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_reg ▇███▇▇▇▆▆▅▅▄▄▄▄▄▃▄▃▃▂▃▂▁▂▂▂▂▁▂▁▁▁▂▂▁▂▁▁▁
wandb: 
wandb: Run summary:
wandb: c0_loss_train_mse 0.0
wandb: c1_loss_train_mse 3e-05
wandb: c2_loss_train_mse 0.0
wandb: c3_loss_train_mse 0.00011
wandb: c4_loss_train_mse 1e-05
wandb: c5_loss_train_mse 3e-05
wandb:            lambda 0.25
wandb:        loss_train 0.00415
wandb:    loss_train_mse 3e-05
wandb:    loss_train_reg 0.00412
wandb: 
wandb: 🚀 View run elfin912_jumprelu_gamreg0.0005_021725 at: https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/buqa3ch4
wandb: ⭐️ View project at: https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20250217_144850-buqa3ch4/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
/n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/../../functions/get_data.py:68: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  file = torch.load(datapath)
wandb: Currently logged in as: sumedh_hindupur (harvard01). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.19.6 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.3
wandb: Run data is saved locally in /n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/wandb/run-20250217_161241-4lopk15a
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run flow11_relu_gamreg0.5_w128_021725
wandb: ⭐️ View project at https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: 🚀 View run at https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/4lopk15a
wandb: - 0.023 MB of 0.023 MB uploadedwandb:                                                                                
wandb: 
wandb: Run history:
wandb: c0_loss_train_mse █▁▁▁▂▁▁▂▁▂▂▂▂▁▂▂▂▁▁▂▂▂▂▂▂▁▂▂▁▂▁▂▁▁▂▁▂▂▂▁
wandb: c1_loss_train_mse ▃█▃▃▂▃▂▂▁▂▂▁▂▂▂▂▁▂▂▂▂▂▂▁▂▂▂▂▁▂▂▂▂▂▂▂▂▂▂▂
wandb: c2_loss_train_mse █▁▁▁▂▁▂▂▃▂▂▂▂▂▂▁▂▂▃▂▂▂▂▂▂▂▂▂▃▂▃▁▂▂▂▂▂▂▃▂
wandb: c3_loss_train_mse █▅▂▂▂▂▁▁▁▂▁▂▂▁▁▂▂▁▁▁▁▁▁▁▂▁▁▁▁▁▂▁▁▁▁▁▁▂▁▁
wandb: c4_loss_train_mse █▁▄▆▅▅▄▄▄▅▄▄▄▄▄▅▅▅▃▄▄▄▄▄▄▄▅▆▅▅▄▃▅▃▄▅▄▄▅▄
wandb: c5_loss_train_mse █▆▄▃▂▁▃▂▂▂▂▁▂▂▂▂▂▂▂▂▂▂▂▂▁▂▂▃▂▂▂▂▂▃▂▂▃▂▂▂
wandb:            lambda ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:        loss_train █▄▃▂▁▁▃▃▃▂▂▂▂▁▂▂▂▂▂▃▁▂▁▁▃▂▂▂▂▃▃▃▂▃▃▁▃▂▂▂
wandb:    loss_train_mse █▆▂▃▂▂▂▂▁▂▂▁▂▂▂▂▂▁▂▁▁▁▂▁▁▁▂▂▂▁▂▁▁▁▁▂▁▂▂▂
wandb:    loss_train_reg █▃▄▃▁▂▄▄▄▂▃▂▂▂▂▃▃▃▃▄▂▃▁▂▅▃▃▃▃▄▄▄▃▅▄▂▅▃▃▂
wandb: 
wandb: Run summary:
wandb: c0_loss_train_mse 0.07891
wandb: c1_loss_train_mse 0.12664
wandb: c2_loss_train_mse 0.07338
wandb: c3_loss_train_mse 0.14727
wandb: c4_loss_train_mse 0.07998
wandb: c5_loss_train_mse 0.15887
wandb:            lambda 0.25
wandb:        loss_train 0.63991
wandb:    loss_train_mse 0.1068
wandb:    loss_train_reg 0.53311
wandb: 
wandb: 🚀 View run flow11_relu_gamreg0.5_w128_021725 at: https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/4lopk15a
wandb: ⭐️ View project at: https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20250217_161241-4lopk15a/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
/n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/../../functions/get_data.py:68: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  file = torch.load(datapath)
wandb: Currently logged in as: sumedh_hindupur (harvard01). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.19.6 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.3
wandb: Run data is saved locally in /n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/wandb/run-20250217_194535-k7dnezwl
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run mean588_topk_relu_k10_w128_021725
wandb: ⭐️ View project at https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: 🚀 View run at https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/k7dnezwl
wandb: - 0.023 MB of 0.023 MB uploadedwandb:                                                                                
wandb: 
wandb: Run history:
wandb: c0_loss_train_mse █▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c1_loss_train_mse ██▄▃▄▃▃▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c2_loss_train_mse █▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c3_loss_train_mse █▆▄▄▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c4_loss_train_mse █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c5_loss_train_mse █▃▂▂▂▁▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            lambda ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:        loss_train █▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_mse █▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_reg █▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb: c0_loss_train_mse 3e-05
wandb: c1_loss_train_mse 6e-05
wandb: c2_loss_train_mse 3e-05
wandb: c3_loss_train_mse 0.00022
wandb: c4_loss_train_mse 1e-05
wandb: c5_loss_train_mse 2e-05
wandb:            lambda 0.25
wandb:        loss_train 0.0001
wandb:    loss_train_mse 5e-05
wandb:    loss_train_reg 5e-05
wandb: 
wandb: 🚀 View run mean588_topk_relu_k10_w128_021725 at: https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/k7dnezwl
wandb: ⭐️ View project at: https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20250217_194535-k7dnezwl/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
