/n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/../../functions/get_data.py:68: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  file = torch.load(datapath)
wandb: Currently logged in as: sumedh_hindupur (harvard01). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.19.6 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.3
wandb: Run data is saved locally in /n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/wandb/run-20250217_133558-nxu5xxls
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run onset762_relu_021725
wandb: ⭐️ View project at https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: 🚀 View run at https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/nxu5xxls
wandb: - 0.023 MB of 0.023 MB uploadedwandb:                                                                                
wandb: 
wandb: Run history:
wandb: c0_loss_train_mse █▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c1_loss_train_mse █▄▄▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁
wandb: c2_loss_train_mse █▃▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c3_loss_train_mse █▅▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c4_loss_train_mse █▂▂▂▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c5_loss_train_mse █▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            lambda ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:        loss_train █▄▃▂▁▁▂▂▂▁▁▁▁▁▁▂▁▁▁▂▁▁▁▁▂▁▁▁▁▂▂▂▁▂▂▁▂▁▁▁
wandb:    loss_train_mse █▄▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_reg █▄▃▂▁▁▂▂▂▁▂▁▁▁▁▂▂▂▁▂▁▂▁▁▂▁▂▂▂▂▂▂▂▂▂▁▂▂▂▁
wandb: 
wandb: Run summary:
wandb: c0_loss_train_mse 0.00285
wandb: c1_loss_train_mse 0.00751
wandb: c2_loss_train_mse 0.00271
wandb: c3_loss_train_mse 0.01036
wandb: c4_loss_train_mse 0.00324
wandb: c5_loss_train_mse 0.0101
wandb:            lambda 0.25
wandb:        loss_train 0.15028
wandb:    loss_train_mse 0.00571
wandb:    loss_train_reg 0.14457
wandb: 
wandb: 🚀 View run onset762_relu_021725 at: https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/nxu5xxls
wandb: ⭐️ View project at: https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20250217_133558-nxu5xxls/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
/n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/../../functions/get_data.py:68: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  file = torch.load(datapath)
wandb: Currently logged in as: sumedh_hindupur (harvard01). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.19.6 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.3
wandb: Run data is saved locally in /n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/wandb/run-20250217_144454-w18z3k0u
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run late163_relu_gamreg0.0001_021725
wandb: ⭐️ View project at https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: 🚀 View run at https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/w18z3k0u
wandb: - 0.023 MB of 0.023 MB uploadedwandb:                                                                                
wandb: 
wandb: Run history:
wandb: c0_loss_train_mse █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c1_loss_train_mse █▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c2_loss_train_mse █▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c3_loss_train_mse █▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c4_loss_train_mse █▄▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c5_loss_train_mse █▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            lambda ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:        loss_train █▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_mse █▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_reg ▁▂▆▆▅▆███▅█▆▆▅▅▆▅▆▄▆▃▄▃▃▅▄▃▃▃▄▃▄▃▅▂▁▄▂▃▂
wandb: 
wandb: Run summary:
wandb: c0_loss_train_mse 0.0
wandb: c1_loss_train_mse 3e-05
wandb: c2_loss_train_mse 0.0
wandb: c3_loss_train_mse 1e-05
wandb: c4_loss_train_mse 0.0
wandb: c5_loss_train_mse 0.0
wandb:            lambda 0.25
wandb:        loss_train 0.00028
wandb:    loss_train_mse 1e-05
wandb:    loss_train_reg 0.00028
wandb: 
wandb: 🚀 View run late163_relu_gamreg0.0001_021725 at: https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/w18z3k0u
wandb: ⭐️ View project at: https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20250217_144454-w18z3k0u/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
/n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/../../functions/get_data.py:68: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  file = torch.load(datapath)
wandb: Currently logged in as: sumedh_hindupur (harvard01). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.19.6 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.3
wandb: Run data is saved locally in /n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/wandb/run-20250217_160856-qof9h37t
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run scent507_relu_gamreg1e-06_w128_021725
wandb: ⭐️ View project at https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: 🚀 View run at https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/qof9h37t
wandb: - 0.008 MB of 0.023 MB uploadedwandb: \ 0.008 MB of 0.023 MB uploadedwandb: | 0.023 MB of 0.023 MB uploadedwandb:                                                                                
wandb: 
wandb: Run history:
wandb: c0_loss_train_mse █▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c1_loss_train_mse █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c2_loss_train_mse █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c3_loss_train_mse █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c4_loss_train_mse █▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c5_loss_train_mse █▄▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            lambda ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:        loss_train █▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_mse █▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_reg ▁▃▄▄▄▅▅▆▆▆▆▆▆▆▆▇▇▇▇█▆▇▆▆▇▆█▇▇▇▇▇▇▇█▆█▆▇▆
wandb: 
wandb: Run summary:
wandb: c0_loss_train_mse 0.0
wandb: c1_loss_train_mse 2e-05
wandb: c2_loss_train_mse 0.0
wandb: c3_loss_train_mse 1e-05
wandb: c4_loss_train_mse 1e-05
wandb: c5_loss_train_mse 5e-05
wandb:            lambda 0.25
wandb:        loss_train 2e-05
wandb:    loss_train_mse 2e-05
wandb:    loss_train_reg 0.0
wandb: 
wandb: 🚀 View run scent507_relu_gamreg1e-06_w128_021725 at: https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/qof9h37t
wandb: ⭐️ View project at: https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20250217_160856-qof9h37t/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
/n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/../../functions/get_data.py:68: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  file = torch.load(datapath)
wandb: Currently logged in as: sumedh_hindupur (harvard01). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.19.6 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.3
wandb: Run data is saved locally in /n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/wandb/run-20250217_165815-mro4qu8m
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run cue288_relu_gamreg1e-12_w128_021725
wandb: ⭐️ View project at https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: 🚀 View run at https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/mro4qu8m
wandb: - 0.008 MB of 0.020 MB uploadedwandb: \ 0.008 MB of 0.020 MB uploadedwandb: | 0.023 MB of 0.023 MB uploadedwandb:                                                                                
wandb: 
wandb: Run history:
wandb: c0_loss_train_mse █▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c1_loss_train_mse █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c2_loss_train_mse █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c3_loss_train_mse █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c4_loss_train_mse █▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c5_loss_train_mse █▄▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            lambda ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:        loss_train █▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_mse █▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_reg ▁▃▄▄▄▅▅▆▆▆▆▆▆▆▆▇▆▇▇█▆▇▆▆▇▆█▇▇▇▇▇▇▇█▆█▆▇▆
wandb: 
wandb: Run summary:
wandb: c0_loss_train_mse 0.0
wandb: c1_loss_train_mse 2e-05
wandb: c2_loss_train_mse 0.0
wandb: c3_loss_train_mse 1e-05
wandb: c4_loss_train_mse 1e-05
wandb: c5_loss_train_mse 5e-05
wandb:            lambda 0.25
wandb:        loss_train 2e-05
wandb:    loss_train_mse 2e-05
wandb:    loss_train_reg 0.0
wandb: 
wandb: 🚀 View run cue288_relu_gamreg1e-12_w128_021725 at: https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/mro4qu8m
wandb: ⭐️ View project at: https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20250217_165815-mro4qu8m/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
/n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/../../functions/get_data.py:68: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  file = torch.load(datapath)
wandb: Currently logged in as: sumedh_hindupur (harvard01). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.19.6 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.3
wandb: Run data is saved locally in /n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/wandb/run-20250217_221856-rqcfuq3b
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run news29_jumprelu_gamreg0.00025_w128_021725
wandb: ⭐️ View project at https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: 🚀 View run at https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/rqcfuq3b
wandb: - 0.015 MB of 0.030 MB uploaded (0.004 MB deduped)wandb: \ 0.015 MB of 0.030 MB uploaded (0.004 MB deduped)wandb: | 0.031 MB of 0.031 MB uploaded (0.004 MB deduped)wandb:                                                                                
wandb: W&B sync reduced upload amount by 12.3%             
wandb: 
wandb: Run history:
wandb: c0_loss_train_mse █▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c1_loss_train_mse █▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c2_loss_train_mse █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c3_loss_train_mse █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c4_loss_train_mse █▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c5_loss_train_mse █▄▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            lambda ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:        loss_train █▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_mse █▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_reg ▇██▇▇▇▇██▆▇▆▅▅▅▆▅▅▄▅▃▄▃▂▃▂▂▁▁▂▂▁▁▂▂▁▂▁▁▁
wandb: 
wandb: Run summary:
wandb: c0_loss_train_mse 1e-05
wandb: c1_loss_train_mse 8e-05
wandb: c2_loss_train_mse 1e-05
wandb: c3_loss_train_mse 4e-05
wandb: c4_loss_train_mse 2e-05
wandb: c5_loss_train_mse 9e-05
wandb:            lambda 0.25
wandb:        loss_train 0.00301
wandb:    loss_train_mse 4e-05
wandb:    loss_train_reg 0.00297
wandb: 
wandb: 🚀 View run news29_jumprelu_gamreg0.00025_w128_021725 at: https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/rqcfuq3b
wandb: ⭐️ View project at: https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20250217_221856-rqcfuq3b/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
/n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/../../functions/get_data.py:68: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  file = torch.load(datapath)
wandb: Currently logged in as: sumedh_hindupur (harvard01). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.19.6 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.3
wandb: Run data is saved locally in /n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/wandb/run-20250217_223426-628wdo7s
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run potty486_jumprelu_gamreg0.0025_w128_021725
wandb: ⭐️ View project at https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: 🚀 View run at https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/628wdo7s
wandb: - 0.024 MB of 0.024 MB uploadedwandb:                                                                                
wandb: 
wandb: Run history:
wandb: c0_loss_train_mse █▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁
wandb: c1_loss_train_mse █▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c2_loss_train_mse █▂▁▁▁▁▂▁▁▁▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c3_loss_train_mse █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c4_loss_train_mse █▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c5_loss_train_mse █▄▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            lambda ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:        loss_train █▅▄▃▃▃▃▃▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_mse █▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_reg ██▇▆▆▅▅▄▄▄▄▄▃▃▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb: c0_loss_train_mse 0.00014
wandb: c1_loss_train_mse 0.00055
wandb: c2_loss_train_mse 0.0
wandb: c3_loss_train_mse 0.00075
wandb: c4_loss_train_mse 0.00049
wandb: c5_loss_train_mse 0.00023
wandb:            lambda 0.25
wandb:        loss_train 0.01412
wandb:    loss_train_mse 0.00037
wandb:    loss_train_reg 0.01375
wandb: 
wandb: 🚀 View run potty486_jumprelu_gamreg0.0025_w128_021725 at: https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/628wdo7s
wandb: ⭐️ View project at: https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20250217_223426-628wdo7s/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
/n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/../../functions/get_data.py:68: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  file = torch.load(datapath)
wandb: Currently logged in as: sumedh_hindupur (harvard01). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.19.6 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.3
wandb: Run data is saved locally in /n/home00/sumedh/spmax_sae/experiments/expt19_separability_diffmag2/wandb/run-20250217_224638-mcu5ngiy
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run ban722_jumprelu_gamreg0.00125_w128_021725
wandb: ⭐️ View project at https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: 🚀 View run at https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/mcu5ngiy
wandb: - 0.008 MB of 0.024 MB uploadedwandb: \ 0.008 MB of 0.024 MB uploadedwandb: | 0.024 MB of 0.024 MB uploadedwandb:                                                                                
wandb: 
wandb: Run history:
wandb: c0_loss_train_mse █▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c1_loss_train_mse █▂▂▁▁▂▂▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c2_loss_train_mse █▂▁▁▂▁▂▁▁▁▁▁▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c3_loss_train_mse █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c4_loss_train_mse █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: c5_loss_train_mse █▄▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            lambda ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:        loss_train █▄▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_mse █▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:    loss_train_reg ██▇▇▆▆▆▆▆▅▄▄▄▄▃▃▃▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb: c0_loss_train_mse 7e-05
wandb: c1_loss_train_mse 1e-05
wandb: c2_loss_train_mse 0.0
wandb: c3_loss_train_mse 0.00011
wandb: c4_loss_train_mse 0.00022
wandb: c5_loss_train_mse 0.00042
wandb:            lambda 0.25
wandb:        loss_train 0.00687
wandb:    loss_train_mse 0.00014
wandb:    loss_train_reg 0.00674
wandb: 
wandb: 🚀 View run ban722_jumprelu_gamreg0.00125_w128_021725 at: https://wandb.ai/harvard01/separability_2dgauss_diffmag/runs/mcu5ngiy
wandb: ⭐️ View project at: https://wandb.ai/harvard01/separability_2dgauss_diffmag
wandb: Synced 5 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20250217_224638-mcu5ngiy/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
